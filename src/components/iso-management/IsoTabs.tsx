
import React from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card";
import { Database, Download, Activity } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import IsoManager from "../IsoManager";

interface IsoTabsProps {
  refreshTrigger: number;
  onShowDockerMonitor: () => void;
}

const IsoTabs = ({ refreshTrigger, onShowDockerMonitor }: IsoTabsProps) => {
  return (
    <Tabs defaultValue="all-isos" className="space-y-4">
      <TabsList>
        <TabsTrigger value="all-isos">All ISO Images</TabsTrigger>
        <TabsTrigger value="real-isos">Real ISO Images</TabsTrigger>
        <TabsTrigger value="simulated-isos">Simulated ISO Images</TabsTrigger>
      </TabsList>
      
      <TabsContent value="all-isos">
        <IsoManager refreshTrigger={refreshTrigger} />
        
        <div className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Download className="h-5 w-5" />
                Download ISO by Job ID
              </CardTitle>
              <CardDescription>
                If you have a job ID from a previous ISO build, you can download it here
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex gap-4">
                <div className="flex-1">
                  <Label htmlFor="job-id">Job ID</Label>
                  <Input
                    id="job-id"
                    placeholder="Enter ISO generation job ID"
                    className="mt-1"
                  />
                </div>
                <div>
                  <Label htmlFor="iso-name">ISO Name (optional)</Label>
                  <Input
                    id="iso-name"
                    placeholder="Custom ISO filename"
                    className="mt-1"
                  />
                </div>
                <div className="flex items-end">
                  <Button>Download</Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </TabsContent>
      
      <TabsContent value="real-isos">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Database className="h-5 w-5" />
              Real ISO Images
            </CardTitle>
            <CardDescription>
              ISO images generated by the backend service with Docker
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <p>Real ISO images are generated using Docker containers. The process includes:</p>
              
              <ol className="list-decimal list-inside space-y-2 pl-4">
                <li className="text-gray-700">
                  <span className="font-medium">Container Creation</span> - A Docker container is created with all necessary tools
                </li>
                <li className="text-gray-700">
                  <span className="font-medium">LFS Files Preparation</span> - Your LFS build files are copied to the container
                </li>
                <li className="text-gray-700">
                  <span className="font-medium">Bootloader Configuration</span> - GRUB or ISOLINUX bootloader is set up
                </li>
                <li className="text-gray-700">
                  <span className="font-medium">ISO Creation</span> - The xorriso tool creates a bootable ISO image
                </li>
                <li className="text-gray-700">
                  <span className="font-medium">Verification</span> - The ISO is verified for integrity
                </li>
              </ol>
              
              <div className="bg-gray-50 p-3 rounded-md mt-4">
                <p className="font-medium text-sm">Docker Container Details:</p>
                <p className="text-xs text-gray-600 mt-1">
                  ISO generation runs in a containerized environment based on Ubuntu 22.04 with 
                  all the necessary tools like xorriso, grub, and other utilities. This ensures
                  consistent ISO generation regardless of your host system.
                </p>
                <Button 
                  variant="link" 
                  className="text-xs p-0 h-auto mt-2" 
                  onClick={onShowDockerMonitor}
                >
                  <Activity className="h-3 w-3 mr-1" />
                  Show Docker Monitor
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
      </TabsContent>
      
      <TabsContent value="simulated-isos">
        <Card>
          <CardHeader>
            <CardTitle>Simulated ISO Images</CardTitle>
            <CardDescription>
              Simulated ISO images (browser-only, not real bootable ISOs)
            </CardDescription>
          </CardHeader>
          <CardContent>
            <p>This tab will show only simulated ISO images that were generated in the browser.</p>
          </CardContent>
        </Card>
      </TabsContent>
    </Tabs>
  );
};

export default IsoTabs;
